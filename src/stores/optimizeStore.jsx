import { create } from "zustand";

const useOptimizeStore = create((set) => ({
    maxArea: "",
    maxStrain: "",
    filmH: "",
    filmK: "",
    filmI: "",
    filmL: "",
    substrateH: "",
    substrateK: "",
    substrateI: "",
    substrateL: "",
    filmMillerIndex: [],
    substrateMillerIndex: [],
    terminationInds: [],
    interfaceData: [],
    filmCubic: true,
    substrateCubic: true,
    useStableSubstrate: true,
    tolarenceError: false,
    setTolarenceError: () => set({tolarenceError: true}),
    interfaceViewData: (<></>),
    resetOptimize: () => set({
        maxArea: "",
        maxStrain: "",
        filmH: "",
        filmK: "",
        filmI: "",
        filmL: "",
        substrateH: "",
        substrateK: "",
        substrateI: "",
        substrateL: "",
        filmMillerIndex: [],
        substrateMillerIndex: [],
        terminationInds: [],
        interfaceData: [],
        filmCubic: true,
        substrateCubic: true,
        useStableSubstrate: true,
        tolarenceError: false,
        interfaceViewData: (<></>),
    }),
    setMaxArea: (value) => set({maxArea: value}),
    setMaxStrain: (value) => set({maxStrain: value}),
    setFilmH: (value) => set({filmH: value}),
    setFilmK: (value) => set({filmK: value}),
    setFilmI: (value) => set({filmI: value}),
    setFilmL: (value) => set({filmL: value}),
    setSubstrateH: (value) => set({substrateH: value}),
    setSubstrateK: (value) => set({substrateK: value}),
    setSubstrateI: (value) => set({substrateI: value}),
    setSubstrateL: (value) => set({substrateL: value}),
    setFilmCubic: (value) => set({filmCubic: value}),
    setSubstrateCubic: (value) => set({substrateCubic: value}),
    setUseStableSubstrate: () => set((state) => ({ useStableSubstrate: !state.useStableSubstrate })),
    setSubstrateMillerIndex: (value) => set({substrateMillerIndex: value}),
    setFilmMillerIndex: (value) => set({filmMillerIndex: value}),
    setTerminationInds: (value) => set({terminationInds: value}),
    setInterfaceData: (value) => set({ interfaceData: value}),
    setInterfaceViewData: (value) => set({interfaceViewData: value})
}));

export default useOptimizeStore;
